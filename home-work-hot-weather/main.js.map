{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bl/abstract/i-city-info-service.ts","webpack:///./src/app/bl/concrete/city-info.service.ts","webpack:///./src/app/data/cities-data.ts","webpack:///./src/app/main-info/about-info/about-info.component.html","webpack:///./src/app/main-info/about-info/about-info.component.less","webpack:///./src/app/main-info/about-info/about-info.component.ts","webpack:///./src/app/main-info/main-info.component.html","webpack:///./src/app/main-info/main-info.component.less","webpack:///./src/app/main-info/main-info.component.ts","webpack:///./src/app/social-info/social-info.component.html","webpack:///./src/app/social-info/social-info.component.less","webpack:///./src/app/social-info/social-info.component.ts","webpack:///./src/app/weather/weather.component.html","webpack:///./src/app/weather/weather.component.less","webpack:///./src/app/weather/weather.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<h1>Hot Weather Widget</h1>\\n<div class=\\\"element\\\">\\n\\t\\t<div class=\\\"element-left\\\">\\n      <app-main-info></app-main-info>\\n\\t   </div>\\n\\t\\t<div class=\\\"element-right\\\">\\n\\t\\t\\t<app-weather [selectedCityWeather]=\\\"cityInfoService.getSelectedCityWeather()\\\"></app-weather>\\n\\t\\t\\t<app-social-info [selectedSocialInfo]=\\\"cityInfoService.getSelectedCitySocialInfo()\\\"></app-social-info>\\n\\t\\t</div>\\n\\t  <div class=\\\"clear\\\"> </div>\\n</div>\\n<div class=\\\"copy-right\\\">\\n\\t\\t\\t<p>Â© 2015 Hot Weather Widget. All rights reserved | Design by  <a href=\\\"http://w3layouts.com/\\\" target=\\\"_blank\\\">  W3layouts </a></p>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyJ9 */\"","import { Component, Inject } from \"@angular/core\";\nimport { ICityInfoServiceToken, ICityInfoService } from \"./bl/abstract/i-city-info-service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.less\"]\n})\nexport class AppComponent {\n  title = \"home-work-hot-weather\";\n\n  public readonly cityInfoService: ICityInfoService;\n\n  constructor(@Inject(ICityInfoServiceToken) cityInfoService: ICityInfoService) {\n    this.cityInfoService = cityInfoService;\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule, InjectionToken } from \"@angular/core\";\n\nimport { AppComponent } from \"./app.component\";\nimport { WeatherComponent } from \"./weather/weather.component\";\nimport { SocialInfoComponent } from \"./social-info/social-info.component\";\nimport { MainInfoComponent } from \"./main-info/main-info.component\";\nimport { AboutInfoComponent } from \"./main-info/about-info/about-info.component\";\nimport { CityInfoService } from \"./bl/concrete/city-info.service\";\nimport { ICityInfoServiceToken } from \"./bl/abstract/i-city-info-service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponent,\n    SocialInfoComponent,\n    MainInfoComponent,\n    AboutInfoComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [\n    {\n      provide: ICityInfoServiceToken,\n      useClass: CityInfoService\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ICityInfoModel } from \"src/app/data/city-info-model\";\r\nimport { IWeatherModel } from \"src/app/data/weather-model\";\r\nimport { ISocialInfoModel } from \"src/app/data/social-info-model\";\r\nimport { InjectionToken } from \"@angular/core\";\r\n\r\nexport let ICityInfoServiceToken = new InjectionToken<ICityInfoService>(\"cityInfoService\");\r\n\r\nexport interface ICityInfoService {\r\n  selectCity(cityId: number): void;\r\n\r\n  getCities(): ICityInfoModel[];\r\n\r\n  getCityWeather(cityId: number): IWeatherModel;\r\n\r\n  getCitySocialInfo(cityId: number): ISocialInfoModel;\r\n\r\n  getSelectedCity(): ICityInfoModel;\r\n\r\n  getSelectedCityWeather(): IWeatherModel;\r\n\r\n  getSelectedCitySocialInfo(): ISocialInfoModel;\r\n}\r\n","import { Injectable, OnInit } from \"@angular/core\";\nimport { ICityInfoService } from \"../abstract/i-city-info-service\";\nimport { ICityInfoModel } from \"src/app/data/city-info-model\";\nimport { IWeatherModel } from \"src/app/data/weather-model\";\nimport { ISocialInfoModel } from \"src/app/data/social-info-model\";\nimport { data } from \"src/app/data/cities-data\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CityInfoService implements ICityInfoService, OnInit {\n  private selectedCityId: number;\n  private readonly cities: ICityInfoModel[];\n\n  constructor() {\n    this.cities = data;\n    this.selectedCityId = this.cities[0].id;\n  }\n\n  ngOnInit() {\n  }\n\n  public getSelectedCityWeather(): IWeatherModel {\n    return this.getCityWeather(this.selectedCityId);\n  }\n  public getSelectedCitySocialInfo(): ISocialInfoModel {\n    return this.getCitySocialInfo(this.selectedCityId);\n  }\n\n  public getSelectedCity(): ICityInfoModel {\n    return this.cities.find(x => x.id === this.selectedCityId);\n  }\n\n  public getCityWeather(cityId: number): IWeatherModel {\n    return this.getCityById(cityId).weather;\n  }\n  public getCitySocialInfo(cityId: number): ISocialInfoModel {\n    return this.getCityById(cityId).socialInfo;\n  }\n  public getCities(): ICityInfoModel[] {\n    return this.cities;\n  }\n  public selectCity(cityId: number): void {\n    this.getCityById(cityId);\n    this.selectedCityId = cityId;\n  }\n\n  private getCityById(cityId: number): ICityInfoModel {\n    const city: ICityInfoModel = this.cities.find(x => x.id === cityId);\n    if (city === null) {\n      throw new Error(`City with id:${cityId} does not exist!`);\n    }\n    return city;\n  }\n}\n","import { ICityInfoModel } from \"./city-info-model\";\r\n\r\nconst _cities: ICityInfoModel[] = [\r\n  {\r\n    id: 1,\r\n    name: \"ÐÐ¸ÐµÐ²\",\r\n    img: \"assets/images/kiev.jpg\",\r\n    country: \"Ð£ÐºÑÐ°Ð¸Ð½Ð°\",\r\n    phone: 1234567890,\r\n    weather: {\r\n      title: \"ÐÐ¸ÐµÐ²ÑÐºÐ°Ñ Ð¿Ð¾Ð³Ð¾Ð´Ð°\",\r\n      icon: \"string\",\r\n      water: 35,\r\n      temperature: 40\r\n    },\r\n    socialInfo: {\r\n      title: \"Ð§ÑÐ¾-ÑÐ¾ ÐÐ¸ÐµÐ²ÑÐºÐ¾Ðµ\",\r\n      img: \"string\",\r\n      followers: 54345,\r\n      following: 345643\r\n    }\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"ÐÐ¾ÑÐºÐ²Ð°\",\r\n    img: \"assets/images/moscow.jpg\",\r\n    country: \"Ð Ð¾ÑÑÐ¸Ñ\",\r\n    phone: 34546654,\r\n    weather: {\r\n      title: \"ÐÐ¾ÑÐºÐ¾Ð²ÑÐºÐ°Ñ Ð¿Ð¾Ð³Ð¾Ð´Ð°\",\r\n      icon: \"string\",\r\n      water: 20,\r\n      temperature: 30\r\n    },\r\n    socialInfo: {\r\n      title: \"ÐÐ¾ÑÐºÐ¾Ð²ÑÐºÐ¸Ð¹ ÑÐµÐºÑÑ\",\r\n      img: \"string\",\r\n      followers: 1488,\r\n      following: 5535\r\n    }\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"ÐÐ¸Ð½ÑÐº\",\r\n    img: \"assets/images/minsk.jpg\",\r\n    country: \"ÐÐµÐ»Ð°ÑÑÑÑ\",\r\n    phone: 5665476868,\r\n    weather: {\r\n      title: \"ÐÐ¾Ð³Ð¾Ð´Ð° Ð² ÐÐµÐ»Ð°ÑÑÑÐ¸\",\r\n      icon: \"string\",\r\n      water: 32,\r\n      temperature: 25\r\n    },\r\n    socialInfo: {\r\n      title: \"ÐÐµÐ»Ð°ÑÑÑÑÐºÐ¸Ð¹ ÑÐµÐºÑÑ\",\r\n      img: \"string\",\r\n      followers: 65567,\r\n      following: 5467578\r\n    }\r\n  }\r\n];\r\n\r\nexport const data: ICityInfoModel[] = _cities;\r\n","module.exports = \"<div class=\\\"village\\\">\\n    <h3>Righteous indignation & like</h3>\\n    <span class=\\\"line\\\"> </span>\\n    <div class=\\\"activity_box\\\">\\n      <div class=\\\"scrollbar\\\" id=\\\"style-2\\\">\\n        <div class=\\\"activity-row\\\">\\n          <div class=\\\"activity-desc\\\">\\n            <h5>Ð¡ÑÑÐ°Ð½Ð°</h5>\\n            <p>{{_cityInfo.country}}</p>\\n            <p>Et harum quidem</p>\\n            <h6>Tel:{{_cityInfo.phone}}</h6>\\n          </div>\\n          <div class=\\\"activity-img\\\">\\n            <ul>\\n              <li><img src=\\\"images/res.jpg\\\" alt=\\\"\\\" /></li>\\n              <li><img src=\\\"images/r1.jpg\\\" alt=\\\"\\\" /></li>\\n            </ul>\\n          </div>\\n        </div>\\n          <div class=\\\"clear\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4taW5mby9hYm91dC1pbmZvL2Fib3V0LWluZm8uY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit, Input } from \"@angular/core\";\nimport { ICityInfoModel } from \"src/app/data/city-info-model\";\n\n@Component({\n  selector: \"app-about-info\",\n  templateUrl: \"./about-info.component.html\",\n  styleUrls: [\"./about-info.component.less\"]\n})\nexport class AboutInfoComponent {\n  public _cityInfo: ICityInfoModel;\n\n  @Input()\n  public set cityInfo(city: ICityInfoModel) {\n    this._cityInfo = city;\n  }\n}\n","module.exports = \"<div class=\\\"element-bg-img\\\">\\n  <img [src]=\\\"selectedCityImage\\\" alt=\\\"\\\" class=\\\"img-responsive\\\" />\\n</div>\\n<div class=\\\"element-left-bottom\\\">\\n  <div class=\\\"ele-strip\\\">\\n    <ul>\\n      <ng-container *ngFor=\\\"let city of cityInfoService.getCities(); last as isLast\\\">\\n        <li [class.anc-bor]=\\\"isLast\\\">\\n          <a (click)=\\\"cityInfoService.selectCity(city.id)\\\">{{ city.name }}</a>\\n        </li>\\n      </ng-container>\\n    </ul>\\n  </div>\\n  <app-about-info [cityInfo]=\\\"cityInfoService.getSelectedCity()\\\"> </app-about-info>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4taW5mby9tYWluLWluZm8uY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, Inject } from \"@angular/core\";\nimport {\n  ICityInfoService,\n  ICityInfoServiceToken\n} from \"../bl/abstract/i-city-info-service\";\n\n@Component({\n  selector: \"app-main-info\",\n  templateUrl: \"./main-info.component.html\",\n  styleUrls: [\"./main-info.component.less\"]\n})\nexport class MainInfoComponent {\n  public readonly cityInfoService: ICityInfoService;\n\n  public get selectedCityImage(): string {\n    return this.cityInfoService.getSelectedCity().img;\n  }\n\n  constructor(@Inject(ICityInfoServiceToken) cityInfoService: ICityInfoService) {\n    this.cityInfoService = cityInfoService;\n  }\n}\n","module.exports = \"<div class=\\\"teddy-bear\\\">\\n  <div class=\\\"teddy-text\\\">\\n    <h4>{{socialInfoModel.title}}</h4>\\n    <span class=\\\"w-line\\\"> </span>\\n    <img [src]=\\\"socialInfoModel.img\\\" alt=\\\"\\\"  class=\\\"img-responsive\\\">\\n    </div>\\n    <div class=\\\"teddy-follow\\\">\\n      <ul>\\n        <li class=\\\"folw-h\\\"><h3>{{socialInfoModel.followers}}</h3>\\n          <p>Followers</p>\\n        </li>\\n        <li><h3>{{socialInfoModel.following}}</h3>\\n          <p>Following</p>\\n        </li>\\n      </ul>\\n    </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NvY2lhbC1pbmZvL3NvY2lhbC1pbmZvLmNvbXBvbmVudC5sZXNzIn0= */\"","import { Component, Input } from \"@angular/core\";\nimport { ISocialInfoModel } from \"../data/social-info-model\";\n\n@Component({\n  selector: \"app-social-info\",\n  templateUrl: \"./social-info.component.html\",\n  styleUrls: [\"./social-info.component.less\"]\n})\nexport class SocialInfoComponent {\n  public socialInfoModel: ISocialInfoModel;\n\n  @Input()\n  public set selectedSocialInfo(value: ISocialInfoModel) {\n    this.socialInfoModel = value;\n  }\n}\n","module.exports = \"<div class=\\\"temperatur\\\">\\n  <h5>{{weatherModel.title}}</h5>\\n  <span class=\\\"w-line\\\"> </span>\\n  <span class=\\\"cloud\\\"> </span>\\n  <h2>{{weatherModel.temperature}}<sup class=\\\"degree\\\">Â°</sup></h2>\\n  <h6>Water {{weatherModel.water}}<sup class=\\\"degree\\\">Â°</sup></h6>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlYXRoZXIvd2VhdGhlci5jb21wb25lbnQubGVzcyJ9 */\"","import { Component, Input } from \"@angular/core\";\nimport { IWeatherModel } from \"../data/weather-model\";\n\n@Component({\n  selector: \"app-weather\",\n  templateUrl: \"./weather.component.html\",\n  styleUrls: [\"./weather.component.less\"]\n})\nexport class WeatherComponent {\n  public weatherModel: IWeatherModel;\n\n  @Input()\n  public set selectedCityWeather(value: IWeatherModel) {\n    this.weatherModel = value;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}